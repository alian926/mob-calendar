{"ast":null,"code":"var _jsxFileName = \"/Users/alian/Desktop/git-source/react-mob-calendar/src/components/calendar/Calendar.tsx\",\n    _s = $RefreshSig$();\n\n/* eslint-disable react/destructuring-assignment */\n\n/**\n * 日视图/列表视图 日历\n */\nimport React, { useEffect, useRef } from 'react';\nimport dayjs from 'dayjs';\nimport { formatMonthData, formatWeekData, formatMonthYear, mergeProps } from '../../utils/index';\nimport { useSetState } from '../../utils/hooks';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst defaultFunc = function () {\n  for (var _len = arguments.length, rest = new Array(_len), _key = 0; _key < _len; _key++) {\n    rest[_key] = arguments[_key];\n  }\n\n  console.log('default function:', rest);\n};\n\nconst defaultCalendarProps = {\n  currentDate: new Date(),\n  showType: 'week',\n  transitionDuration: 0.3,\n  onDateClick: defaultFunc,\n  onTouchStart: defaultFunc,\n  onTouchMove: defaultFunc,\n  onTouchEnd: defaultFunc,\n  onToggleShowType: defaultFunc\n};\n\nconst Calendar = p => {\n  _s();\n\n  const props = mergeProps(defaultCalendarProps, p);\n  const {\n    currentDate,\n    transitionDuration,\n    markDates,\n    disabledMonthView,\n    onTouchStart,\n    onTouchMove,\n    onTouchEnd,\n    onToggleShowType,\n    onDateClick\n  } = props;\n  const [state, setState] = useSetState({\n    currentMonthFirstDay: dayjs().startOf('month'),\n    monthDates: [],\n    // 月日历需要展示的日期 包括前一月 当月 下一月\n    currentWeekFirstDay: dayjs().startOf('week'),\n    weekDates: [],\n    // 周日历需要展示的日期  包括前一周 当周 下一周\n    currentDate: dayjs(),\n    touch: {\n      x: 0,\n      y: 0\n    },\n    translateIndex: 0,\n    calendarY: 0,\n    // 于Y轴的位置\n    showType: props.showType\n  }); // 是否拖动中\n\n  const isTouchingRef = useRef(false); // 拖动起始横坐标\n\n  const touchStartPositionXRef = useRef(0); // 拖动起始纵坐标\n\n  const touchStartPositionYRef = useRef(0); // 日历dom\n\n  const calendarRef = useRef(null);\n  const {\n    monthDates,\n    weekDates,\n    touch,\n    translateIndex,\n    calendarY,\n    currentMonthFirstDay,\n    currentWeekFirstDay,\n    showType\n  } = state; // 更新日期. 模拟 getDerivedStateFromProps\n\n  useEffect(() => {\n    const dayjsDate = dayjs(props.currentDate);\n    setState({ ...formatMonthData(dayjsDate),\n      ...formatWeekData(dayjsDate),\n      currentDate: dayjsDate\n    });\n  }, [props.currentDate, setState]); // 点击选中日期\n\n  const handleDayClick = date => {\n    if (dayjs(currentDate).isSame(date, 'day')) {\n      return;\n    }\n\n    onDateClick(date.toDate());\n  };\n\n  const handleTouchMove = _.throttle(e => {\n    e.stopPropagation();\n    const moveX = e.touches[0].clientX - touchStartPositionXRef.current;\n    const moveY = e.touches[0].clientY - touchStartPositionYRef.current;\n    const calendarWidth = calendarRef.current.offsetWidth;\n    const calendarHeight = calendarRef.current.offsetHeight;\n\n    if (Math.abs(moveX) > Math.abs(moveY)) {\n      // 左右滑动\n      setState({\n        touch: {\n          x: moveX / calendarWidth,\n          y: 0\n        }\n      });\n    } else if (!disabledMonthView) {\n      setState({\n        touch: {\n          x: 0,\n          y: moveY / calendarHeight\n        }\n      });\n    }\n\n    onTouchMove(e);\n  }, 25);\n\n  const handleTouchStart = e => {\n    e.stopPropagation();\n    touchStartPositionXRef.current = e.touches[0].clientX;\n    touchStartPositionYRef.current = e.touches[0].clientY;\n    isTouchingRef.current = true;\n    onTouchStart(e);\n  };\n\n  const handleTouchEnd = e => {\n    e.stopPropagation();\n    const calendarHeight = calendarRef.current.offsetHeight;\n    isTouchingRef.current = false;\n    const absTouchX = Math.abs(touch.x);\n    const absTouchY = Math.abs(touch.y);\n\n    if (absTouchX > absTouchY && absTouchX > 0.15) {\n      const isMonthView = showType === 'month'; // touch.x > 0 右滑 日期减少, 回到上个月, translateIndex变大 向右偏移\n\n      const newTranslateIndex = touch.x > 0 ? translateIndex + 1 : translateIndex - 1;\n\n      if (isMonthView) {\n        // 月视图\n        const nextMonthFirstDay = currentMonthFirstDay[touch.x > 0 ? 'subtract' : 'add'](1, 'month'); // const nextMonthStartDay = nextMonthFirstDay.startOf('week');\n        // const nextMonthEndDay = nextMonthStartDay.add(42, 'day');\n\n        setState({\n          translateIndex: newTranslateIndex,\n          ...formatMonthData(nextMonthFirstDay)\n        });\n        handleDayClick(nextMonthFirstDay); // onTouchEnd(nextMonthStartDay.valueOf(), nextMonthEndDay.valueOf());\n      } else {\n        // 周视图\n        const nexCurrentDay = dayjs(currentDate)[touch.x > 0 ? 'subtract' : 'add'](1, 'week');\n        const nextWeekFirstDay = currentWeekFirstDay[touch.x > 0 ? 'subtract' : 'add'](1, 'week'); // const nextWeekLastDay = nextWeekFirstDay.add(7, 'day');\n\n        setState({\n          translateIndex: newTranslateIndex,\n          ...formatWeekData(nextWeekFirstDay)\n        });\n        handleDayClick(nexCurrentDay); // onTouchEnd(nextWeekFirstDay.valueOf(), nextWeekLastDay.valueOf());\n      }\n    } else if (absTouchY > absTouchX && Math.abs(touch.y * calendarHeight) > 50) {\n      if (disabledMonthView) {// 禁用周视图\n      } else if (touch.y > 0 && showType === 'week') {\n        setState({\n          showType: 'month'\n        }); // const cb = () => {\n        //     const dataArray = state.weekDates[1];\n        //     onToggleShowType({\n        //         showType: state.showType,\n        //         startTime: dataArray[0].valueOf(),\n        //         endTime: dataArray[dataArray.length - 1].add(1, 'day').valueOf()\n        //     });\n        // };\n        // cb();\n      } else if (touch.y < 0 && showType === 'month') {\n        setState({\n          showType: 'week'\n        }); // const cb = () => {\n        //     const dataArray = state.weekDates[1];\n        //     onToggleShowType({\n        //         showType: state.showType,\n        //         startTime: dataArray[0].valueOf(),\n        //         endTime: dataArray[dataArray.length - 1].add(1, 'day').valueOf()\n        //     });\n        // };\n        // cb();\n      }\n    }\n\n    setState({\n      touch: {\n        x: 0,\n        y: 0\n      }\n    });\n  };\n\n  const handleShowTypeToggle = () => {\n    setState({\n      showType: showType === 'month' ? 'week' : 'month'\n    });\n  }; // 可以通过此函数 实现 点击按钮 进行月份切换\n\n\n  const handleMonthToggle = type => {\n    const {\n      currentMonthFirstDay,\n      currentWeekFirstDay,\n      showType\n    } = state;\n    const isMonthView = showType === 'month';\n    const isPrev = type === 'prev';\n    const formatFun = isMonthView ? formatMonthData : formatWeekData;\n    const operateDate = isMonthView ? currentMonthFirstDay : currentWeekFirstDay;\n    const updateStateData = formatFun(operateDate[isPrev ? 'subtract' : 'add'](1, isMonthView ? 'month' : 'week'));\n    setState(updateStateData); // const cb = () => {\n    //     const dataArray = updateStateData[isMonthView ? 'monthDates' : 'weekDates'][1];\n    //     onTouchEnd(dataArray[0].valueOf(), dataArray[dataArray.length - 1].add(1, 'day').valueOf());\n    // };\n    // cb();\n  }; // 收起为周视图, 展开为月视图\n\n\n  const isMonthView = showType === 'month'; // 格式化日期显示\n\n  const formatDay = date => {\n    if (dayjs().isSame(date, 'day')) {\n      return /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          color: '#3388FF'\n        },\n        children: \"\\u4ECA\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 20\n      }, this);\n    } // 'YYYY-MM-DD HH:mm:ss'\n\n\n    return dayjs(date).format('D');\n  };\n\n  const head = ['日', '一', '二', '三', '四', '五', '六'];\n  const calendarBodyHeight = (isMonthView ? 252 : 38) + 8;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"smart-calendar\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"calendar-operate\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: formatMonthYear(currentDate)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"calendar-head\",\n      children: head.map(i => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"head-cell\",\n        children: i\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `calendar-body ${isMonthView ? '' : 'week-mode'}`,\n      style: {\n        height: calendarBodyHeight\n      },\n      ref: calendarRef,\n      onTouchStart: handleTouchStart,\n      onTouchMove: handleTouchMove,\n      onTouchEnd: handleTouchEnd,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          transform: `translate3d(${-translateIndex * 100}%, 0, 0)`\n        },\n        children: (isMonthView ? monthDates : weekDates).map((item, index) => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"month-cell\",\n            style: {\n              transform: `translate3d(${(index - 1 + translateIndex + (isTouchingRef.current ? touch.x : 0)) * 100}%, ${calendarY}px, 0)`,\n              transitionDuration: `${isTouchingRef.current ? 0 : transitionDuration}s`\n            },\n            children: item.map((date, itemIndex) => {\n              // 选中日期\n              const isCurrentDay = date.isSame(currentDate, 'day'); // 其它月的日期, 在星期的模式下不显示置灰\n\n              const isOtherMonthDay = showType === 'week' ? false : !date.isSame(currentMonthFirstDay, 'month'); // 是否为标志过的日期\n\n              const isMarkDate = markDates.find(d => date.isSame(d, 'day'));\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: `day-cell ${isOtherMonthDay ? 'is-other-month-day' : ''} ${isCurrentDay ? 'current-day' : ''}`,\n                onClick: () => handleDayClick(date),\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"day-text\",\n                  children: formatDay(date)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 358,\n                  columnNumber: 49\n                }, this), isMarkDate && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"dot-mark\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 362,\n                  columnNumber: 53\n                }, this)]\n              }, itemIndex, true, {\n                fileName: _jsxFileName,\n                lineNumber: 344,\n                columnNumber: 45\n              }, this);\n            })\n          }, `month-cell-${index}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 306,\n            columnNumber: 33\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bottom-operate\",\n        children: !disabledMonthView && /*#__PURE__*/_jsxDEV(\"div\", {\n          role: \"presentation\",\n          onClick: handleShowTypeToggle,\n          className: \"bottom-operate-btn\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 374,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 372,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 274,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Calendar, \"4LPI67omsxCfFihKctmU6SQBe4s=\", false, function () {\n  return [useSetState];\n});\n\n_c = Calendar;\nCalendar.defaultProps = {\n  currentDate: new Date(),\n  showType: 'week',\n  transitionDuration: 0.3,\n  onDateClick: () => {},\n  onTouchStart: () => {},\n  onTouchMove: () => {},\n  onTouchEnd: () => {},\n  onToggleShowType: () => {},\n  markDates: [],\n  disabledMonthView: false\n};\nexport default Calendar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Calendar\");","map":{"version":3,"sources":["/Users/alian/Desktop/git-source/react-mob-calendar/src/components/calendar/Calendar.tsx"],"names":["React","useEffect","useRef","dayjs","formatMonthData","formatWeekData","formatMonthYear","mergeProps","useSetState","defaultFunc","rest","console","log","defaultCalendarProps","currentDate","Date","showType","transitionDuration","onDateClick","onTouchStart","onTouchMove","onTouchEnd","onToggleShowType","Calendar","p","props","markDates","disabledMonthView","state","setState","currentMonthFirstDay","startOf","monthDates","currentWeekFirstDay","weekDates","touch","x","y","translateIndex","calendarY","isTouchingRef","touchStartPositionXRef","touchStartPositionYRef","calendarRef","dayjsDate","handleDayClick","date","isSame","toDate","handleTouchMove","_","throttle","e","stopPropagation","moveX","touches","clientX","current","moveY","clientY","calendarWidth","offsetWidth","calendarHeight","offsetHeight","Math","abs","handleTouchStart","handleTouchEnd","absTouchX","absTouchY","isMonthView","newTranslateIndex","nextMonthFirstDay","nexCurrentDay","nextWeekFirstDay","handleShowTypeToggle","handleMonthToggle","type","isPrev","formatFun","operateDate","updateStateData","formatDay","color","format","head","calendarBodyHeight","map","i","height","transform","item","index","itemIndex","isCurrentDay","isOtherMonthDay","isMarkDate","find","d","defaultProps"],"mappings":"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","sourcesContent":["/* eslint-disable react/destructuring-assignment */\n/**\n * 日视图/列表视图 日历\n */\nimport React, { FC, useEffect, useRef } from 'react';\nimport dayjs, { Dayjs } from 'dayjs';\nimport { animated, useSpring } from '@react-spring/web';\nimport { useDrag } from '@use-gesture/react';\n\nimport {\n    formatMonthData,\n    formatWeekData,\n    formatMonthYear,\n    mergeProps,\n} from '../../utils/index';\n\nimport { useSetState } from '../../utils/hooks';\n\nexport type CalendarProps = {\n    // 选中日期\n    currentDate?: Date;\n    // 展示方式\n    showType?: 'week' | 'month';\n    // 动画时间\n    transitionDuration?: number;\n    // 点击选中日期\n    onDateClick?: Function;\n    // 拖动开始\n    onTouchStart?: Function;\n    // 拖动过程\n    onTouchMove?: Function;\n    // 拖动结束\n    onTouchEnd?: (start: number, end: number) => void;\n    // 更换视图模式\n    onToggleShowType?: Function;\n    // 标记日期\n    markDates?: Date[];\n    // 禁用月视图\n    disabledMonthView?: boolean;\n};\n\nconst defaultFunc = (...rest: any) => {\n    console.log('default function:', rest);\n};\n\nconst defaultCalendarProps = {\n    currentDate: new Date(),\n    showType: 'week',\n    transitionDuration: 0.3,\n    onDateClick: defaultFunc,\n    onTouchStart: defaultFunc,\n    onTouchMove: defaultFunc,\n    onTouchEnd: defaultFunc,\n    onToggleShowType: defaultFunc,\n};\n\ntype StateValue = {\n    currentMonthFirstDay: Dayjs;\n    monthDates: Dayjs[][];\n    currentWeekFirstDay: Dayjs;\n    weekDates: Dayjs[][];\n    currentDate: Dayjs;\n    touch: { x: number; y: number };\n    translateIndex: number;\n    calendarY: number;\n    showType: CalendarProps['showType'];\n};\n\nconst Calendar: FC<CalendarProps> = p => {\n    const props = mergeProps(defaultCalendarProps, p);\n    const {\n        currentDate,\n        transitionDuration,\n        markDates,\n        disabledMonthView,\n        onTouchStart,\n        onTouchMove,\n        onTouchEnd,\n        onToggleShowType,\n        onDateClick,\n    } = props;\n\n    const [state, setState] = useSetState<StateValue>({\n        currentMonthFirstDay: dayjs().startOf('month'),\n        monthDates: [], // 月日历需要展示的日期 包括前一月 当月 下一月\n        currentWeekFirstDay: dayjs().startOf('week'),\n        weekDates: [], // 周日历需要展示的日期  包括前一周 当周 下一周\n        currentDate: dayjs(),\n        touch: { x: 0, y: 0 },\n        translateIndex: 0,\n        calendarY: 0, // 于Y轴的位置\n        showType: props.showType,\n    });\n\n    // 是否拖动中\n    const isTouchingRef = useRef(false);\n    // 拖动起始横坐标\n    const touchStartPositionXRef = useRef(0);\n    // 拖动起始纵坐标\n    const touchStartPositionYRef = useRef(0);\n    // 日历dom\n    const calendarRef = useRef(null);\n\n    const {\n        monthDates,\n        weekDates,\n        touch,\n        translateIndex,\n        calendarY,\n        currentMonthFirstDay,\n        currentWeekFirstDay,\n        showType,\n    } = state;\n\n    // 更新日期. 模拟 getDerivedStateFromProps\n    useEffect(() => {\n        const dayjsDate = dayjs(props.currentDate)\n        setState({\n            ...formatMonthData(dayjsDate),\n            ...formatWeekData(dayjsDate),\n            currentDate: dayjsDate,\n        });\n    }, [props.currentDate, setState]);\n\n    // 点击选中日期\n    const handleDayClick = date => {\n        if (dayjs(currentDate).isSame(date, 'day')) {\n            return;\n        }\n        onDateClick(date.toDate());\n    };\n\n    const handleTouchMove = _.throttle(e => {\n        e.stopPropagation();\n        const moveX = e.touches[0].clientX - touchStartPositionXRef.current;\n        const moveY = e.touches[0].clientY - touchStartPositionYRef.current;\n        const calendarWidth = calendarRef.current.offsetWidth;\n        const calendarHeight = calendarRef.current.offsetHeight;\n        if (Math.abs(moveX) > Math.abs(moveY)) {\n            // 左右滑动\n            setState({ touch: { x: moveX / calendarWidth, y: 0 } });\n        } else if (!disabledMonthView) {\n            setState({ touch: { x: 0, y: moveY / calendarHeight } });\n        }\n        onTouchMove(e);\n    }, 25);\n\n    const handleTouchStart = e => {\n        e.stopPropagation();\n        touchStartPositionXRef.current = e.touches[0].clientX;\n        touchStartPositionYRef.current = e.touches[0].clientY;\n        isTouchingRef.current = true;\n        onTouchStart(e);\n    };\n\n    const handleTouchEnd = e => {\n        e.stopPropagation();\n        const calendarHeight = calendarRef.current.offsetHeight;\n        isTouchingRef.current = false;\n        const absTouchX = Math.abs(touch.x);\n        const absTouchY = Math.abs(touch.y);\n        if (absTouchX > absTouchY && absTouchX > 0.15) {\n            const isMonthView = showType === 'month';\n            // touch.x > 0 右滑 日期减少, 回到上个月, translateIndex变大 向右偏移\n            const newTranslateIndex =\n                touch.x > 0 ? translateIndex + 1 : translateIndex - 1;\n\n            if (isMonthView) {\n                // 月视图\n                const nextMonthFirstDay = currentMonthFirstDay[\n                    touch.x > 0 ? 'subtract' : 'add'\n                ](1, 'month');\n                // const nextMonthStartDay = nextMonthFirstDay.startOf('week');\n                // const nextMonthEndDay = nextMonthStartDay.add(42, 'day');\n                setState({\n                    translateIndex: newTranslateIndex,\n                    ...formatMonthData(nextMonthFirstDay),\n                });\n                handleDayClick(nextMonthFirstDay);\n                // onTouchEnd(nextMonthStartDay.valueOf(), nextMonthEndDay.valueOf());\n            } else {\n                // 周视图\n                const nexCurrentDay = dayjs(currentDate)[\n                    touch.x > 0 ? 'subtract' : 'add'\n                ](1, 'week');\n                const nextWeekFirstDay = currentWeekFirstDay[\n                    touch.x > 0 ? 'subtract' : 'add'\n                ](1, 'week');\n                // const nextWeekLastDay = nextWeekFirstDay.add(7, 'day');\n                setState({\n                    translateIndex: newTranslateIndex,\n                    ...formatWeekData(nextWeekFirstDay),\n                });\n                handleDayClick(nexCurrentDay);\n                // onTouchEnd(nextWeekFirstDay.valueOf(), nextWeekLastDay.valueOf());\n            }\n        } else if (\n            absTouchY > absTouchX &&\n            Math.abs(touch.y * calendarHeight) > 50\n        ) {\n            if (disabledMonthView) {\n                // 禁用周视图\n            } else if (touch.y > 0 && showType === 'week') {\n                setState({ showType: 'month' });\n                // const cb = () => {\n                //     const dataArray = state.weekDates[1];\n                //     onToggleShowType({\n                //         showType: state.showType,\n                //         startTime: dataArray[0].valueOf(),\n                //         endTime: dataArray[dataArray.length - 1].add(1, 'day').valueOf()\n                //     });\n                // };\n                // cb();\n            } else if (touch.y < 0 && showType === 'month') {\n                setState({ showType: 'week' });\n                // const cb = () => {\n                //     const dataArray = state.weekDates[1];\n                //     onToggleShowType({\n                //         showType: state.showType,\n                //         startTime: dataArray[0].valueOf(),\n                //         endTime: dataArray[dataArray.length - 1].add(1, 'day').valueOf()\n                //     });\n                // };\n                // cb();\n            }\n        }\n        setState({ touch: { x: 0, y: 0 } });\n    };\n\n    const handleShowTypeToggle = () => {\n        setState({ showType: showType === 'month' ? 'week' : 'month' });\n    };\n\n    // 可以通过此函数 实现 点击按钮 进行月份切换\n    const handleMonthToggle = (type: 'prev' | 'next') => {\n        const { currentMonthFirstDay, currentWeekFirstDay, showType } = state;\n        const isMonthView = showType === 'month';\n        const isPrev = type === 'prev';\n        const formatFun = isMonthView ? formatMonthData : formatWeekData;\n        const operateDate = isMonthView\n            ? currentMonthFirstDay\n            : currentWeekFirstDay;\n        const updateStateData = formatFun(\n            operateDate[isPrev ? 'subtract' : 'add'](\n                1,\n                isMonthView ? 'month' : 'week'\n            )\n        );\n        setState(updateStateData);\n        // const cb = () => {\n        //     const dataArray = updateStateData[isMonthView ? 'monthDates' : 'weekDates'][1];\n        //     onTouchEnd(dataArray[0].valueOf(), dataArray[dataArray.length - 1].add(1, 'day').valueOf());\n        // };\n        // cb();\n    };\n\n    // 收起为周视图, 展开为月视图\n    const isMonthView = showType === 'month';\n\n    // 格式化日期显示\n    const formatDay = (date: Date) => {\n        if (dayjs().isSame(date, 'day')) {\n            return <span style={{ color: '#3388FF' }}>今</span>;\n        }\n        // 'YYYY-MM-DD HH:mm:ss'\n        return dayjs(date).format('D');\n    };\n\n    const head = ['日', '一', '二', '三', '四', '五', '六'];\n\n    const calendarBodyHeight = (isMonthView ? 252 : 38) + 8;\n\n    return (\n        <div className='smart-calendar'>\n            {/* 年月 */}\n            <div className='calendar-operate'>\n                <div>{formatMonthYear(currentDate)}</div>\n            </div>\n\n            {/* 星期 */}\n            <div className='calendar-head'>\n                {head.map(i => (\n                    <div className='head-cell' key={i}>\n                        {i}\n                    </div>\n                ))}\n            </div>\n\n            {/* 日期表格 */}\n            <div\n                className={`calendar-body ${isMonthView ? '' : 'week-mode'}`}\n                style={{ height: calendarBodyHeight }}\n                ref={calendarRef}\n                onTouchStart={handleTouchStart}\n                onTouchMove={handleTouchMove}\n                onTouchEnd={handleTouchEnd}>\n                <div\n                    style={{\n                        transform: `translate3d(${\n                            -translateIndex * 100\n                        }%, 0, 0)`,\n                    }}>\n                    {(isMonthView ? monthDates : weekDates).map(\n                        (item, index) => {\n                            return (\n                                <div\n                                    className='month-cell'\n                                    key={`month-cell-${index}`}\n                                    style={{\n                                        transform: `translate3d(${\n                                            (index -\n                                                1 +\n                                                translateIndex +\n                                                (isTouchingRef.current\n                                                    ? touch.x\n                                                    : 0)) *\n                                            100\n                                        }%, ${calendarY}px, 0)`,\n                                        transitionDuration: `${\n                                            isTouchingRef.current\n                                                ? 0\n                                                : transitionDuration\n                                        }s`,\n                                    }}>\n                                    {item.map((date, itemIndex) => {\n                                        // 选中日期\n                                        const isCurrentDay = date.isSame(\n                                            currentDate,\n                                            'day'\n                                        );\n                                        // 其它月的日期, 在星期的模式下不显示置灰\n                                        const isOtherMonthDay =\n                                            showType === 'week'\n                                                ? false\n                                                : !date.isSame(\n                                                      currentMonthFirstDay,\n                                                      'month'\n                                                  );\n                                        // 是否为标志过的日期\n                                        const isMarkDate = markDates.find(d =>\n                                            date.isSame(d, 'day')\n                                        );\n                                        return (\n                                            <div\n                                                key={itemIndex}\n                                                className={`day-cell ${\n                                                    isOtherMonthDay\n                                                        ? 'is-other-month-day'\n                                                        : ''\n                                                } ${\n                                                    isCurrentDay\n                                                        ? 'current-day'\n                                                        : ''\n                                                }`}\n                                                onClick={() =>\n                                                    handleDayClick(date)\n                                                }>\n                                                <div className='day-text'>\n                                                    {formatDay(date)}\n                                                </div>\n                                                {isMarkDate && (\n                                                    <div className='dot-mark' />\n                                                )}\n                                            </div>\n                                        );\n                                    })}\n                                </div>\n                            );\n                        }\n                    )}\n                </div>\n                <div className='bottom-operate'>\n                    {!disabledMonthView && (\n                        <div\n                            role='presentation'\n                            onClick={handleShowTypeToggle}\n                            className='bottom-operate-btn'\n                        />\n                    )}\n                </div>\n            </div>\n        </div>\n    );\n};\n\nCalendar.defaultProps = {\n    currentDate: new Date(),\n    showType: 'week',\n    transitionDuration: 0.3,\n    onDateClick: () => {},\n    onTouchStart: () => {},\n    onTouchMove: () => {},\n    onTouchEnd: () => {},\n    onToggleShowType: () => {},\n    markDates: [],\n    disabledMonthView: false,\n};\n\nexport default Calendar;\n"]},"metadata":{},"sourceType":"module"}