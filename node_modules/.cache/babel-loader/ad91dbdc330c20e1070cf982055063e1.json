{"ast":null,"code":"var _jsxFileName = \"/Users/alian/Desktop/git-source/react-mob-calendar/src/components/calendar/Calendar.tsx\",\n    _s = $RefreshSig$();\n\n/* eslint-disable react/destructuring-assignment */\n\n/**\n * 日视图/列表视图 日历\n */\nimport React, { useEffect, useRef } from 'react';\nimport dayjs from 'dayjs';\nimport cn from 'classnames';\nimport { animated, useSpring, useSprings } from '@react-spring/web';\nimport { useDrag } from '@use-gesture/react';\nimport { formatMonthDate, formatWeekDate, formatMonthYear, mergeProps } from '../../utils/index';\nimport { useSetState } from '../../utils/hooks';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst defaultFunc = function () {// console.log('default function:', rest);\n};\n\nconst defaultCalendarProps = {\n  currentDate: new Date(),\n  showType: 'week',\n  transitionDuration: 0.3,\n  onDateClick: defaultFunc,\n  onTouchStart: defaultFunc,\n  onTouchMove: defaultFunc,\n  onTouchEnd: defaultFunc,\n  onToggleShowType: defaultFunc,\n  markDates: []\n};\n\nconst Calendar = p => {\n  _s();\n\n  const props = mergeProps(defaultCalendarProps, p);\n  const [state, setState] = useSetState({\n    currentMonthFirstDay: dayjs().startOf('month'),\n    monthDates: [],\n    // 月日历需要展示的日期 包括前一月 当月 下一月\n    currentWeekFirstDay: dayjs().startOf('week'),\n    weekDates: [],\n    // 周日历需要展示的日期  包括前一周 当周 下一周\n    currentDate: dayjs(),\n    touch: {\n      x: 0,\n      y: 0\n    },\n    translateIndex: 0,\n    calendarY: 0,\n    // 于Y轴的位置\n    showType: props.showType,\n    isTouching: false\n  }); // 是否拖动中\n\n  const isTouchingRef = useRef(false); // 日历dom\n\n  const calendarRef = useRef(null); // 收起为周视图, 展开为月视图\n\n  const isMonthView = state.showType === 'month'; // 更新日期. 模拟 getDerivedStateFromProps\n\n  useEffect(() => {\n    const dayjsDate = dayjs(props.currentDate);\n    setState({ ...formatMonthDate(dayjsDate),\n      ...formatWeekDate(dayjsDate),\n      currentDate: dayjsDate\n    });\n  }, [props.currentDate, setState]); // 点击选中日期\n\n  const handleDayClick = dayjsDate => {\n    if (dayjs(state.currentDate).isSame(dayjsDate, 'day')) {\n      return;\n    }\n\n    setState({ ...formatMonthDate(dayjsDate),\n      ...formatWeekDate(dayjsDate),\n      currentDate: dayjsDate\n    });\n    props.onDateClick(dayjsDate.toDate());\n  };\n\n  const [springStyles, springApi] = useSprings(3, i => ({\n    from: {\n      transform: `translate3d(${(i - 1 + state.translateIndex) * 100}%, ${state.calendarY}px, 0)`,\n      transitionDuration: `${props.transitionDuration}s`\n    },\n    config: {\n      tension: 100,\n      friction: 30,\n      clamp: true,\n      duration: 0\n    }\n  }));\n  const [heightStyle, heightApi] = useSpring(() => ({\n    from: {\n      height: 46,\n      transitionDuration: '0.3s'\n    }\n  }));\n  useEffect(() => {\n    heightApi.start({\n      from: {\n        height: state.showType === 'week' ? 46 : 260\n      }\n    });\n  }, [state.showType, heightApi]);\n\n  const runHorizontal = dragState => {\n    var _calendarRef$current;\n\n    const [x] = dragState.movement;\n\n    if (dragState.last) {\n      isTouchingRef.current = false;\n\n      if (Math.abs(x) > 80) {\n        const add = x > 0 ? 1 : -1;\n        springApi.start(i => ({\n          to: async next => {\n            await next({\n              transform: `translate3d(${(i - 1 + state.translateIndex + add) * 100}%, ${state.calendarY}px, 0)`,\n              transitionDuration: `${props.transitionDuration}s`\n            });\n          }\n        }));\n        setState({\n          translateIndex: state.translateIndex + add\n        });\n\n        if (isMonthView) {\n          const nextMonthFirstDay = state.currentMonthFirstDay[add > 0 ? 'subtract' : 'add'](1, 'month');\n          handleDayClick(nextMonthFirstDay);\n        } else {\n          const nextWeekFirstDay = state.currentWeekFirstDay[add > 0 ? 'subtract' : 'add'](1, 'week');\n          handleDayClick(nextWeekFirstDay);\n        }\n      } else {\n        springApi.start(i => ({\n          to: async next => {\n            await next({\n              transform: `translate3d(${(i - 1 + state.translateIndex) * 100}%, ${state.calendarY}px, 0)`,\n              transitionDuration: `${props.transitionDuration}s`\n            });\n          }\n        }));\n      }\n\n      return;\n    }\n\n    const width = ((_calendarRef$current = calendarRef.current) === null || _calendarRef$current === void 0 ? void 0 : _calendarRef$current.offsetWidth) || 1;\n    const xPersent = x / width;\n    springApi.start(i => ({\n      transform: `translate3d(${(i - 1 + state.translateIndex + xPersent) * 100}%, ${state.calendarY}px, 0)`,\n      transitionDuration: `0s`,\n      immediate: true\n    }));\n  };\n\n  const runVertical = dragState => {\n    const [, y] = dragState.movement;\n    const height = isMonthView ? 260 : 46;\n\n    if (dragState.last) {\n      if (Math.abs(y) > 80) {\n        handleShowTypeToggle();\n\n        if (y > 0) {\n          heightApi.start({\n            to: async next => {\n              await next({\n                height: height,\n                transitionDuration: '0.3s'\n              });\n            }\n          });\n        }\n      } else {\n        heightApi.start({\n          from: {\n            height: height,\n            transitionDuration: '0.3s'\n          }\n        });\n      }\n\n      return;\n    }\n\n    if (isMonthView) {\n      heightApi.start({\n        from: {\n          height: Math.max(height + y, 60),\n          transitionDuration: '0s'\n        }\n      });\n    } else {\n      heightApi.start({\n        from: {\n          height: Math.min(height + y, 260),\n          transitionDuration: '0s'\n        }\n      });\n    }\n  };\n\n  useDrag(dragState => {\n    dragState.event.stopPropagation();\n\n    if (dragState.first) {\n      isTouchingRef.current = true;\n    }\n\n    if (dragState.axis === 'x') {\n      runHorizontal(dragState);\n    }\n\n    if (dragState.axis === 'y') {\n      if (!state.isTouching) {\n        setState({\n          isTouching: true\n        });\n      }\n\n      runVertical(dragState);\n    }\n  }, {\n    pointer: {\n      touch: true\n    },\n    target: calendarRef,\n    eventOptions: {\n      passive: false\n    }\n  });\n\n  const handleShowTypeToggle = () => {\n    setState({\n      showType: state.showType === 'month' ? 'week' : 'month'\n    });\n  }; // 可以通过此函数 实现 点击按钮 进行月份切换\n\n\n  const handleMonthToggle = type => {\n    const {\n      currentMonthFirstDay,\n      currentWeekFirstDay,\n      showType\n    } = state;\n    const isMonthView = showType === 'month';\n    const isPrev = type === 'prev';\n    const formatFun = isMonthView ? formatMonthDate : formatWeekDate;\n    const operateDate = isMonthView ? currentMonthFirstDay : currentWeekFirstDay;\n    const updateStateData = formatFun(operateDate[isPrev ? 'subtract' : 'add'](1, isMonthView ? 'month' : 'week'));\n    setState(updateStateData); // const cb = () => {\n    //     const dataArray = updateStateData[isMonthView ? 'monthDates' : 'weekDates'][1];\n    //     onTouchEnd(dataArray[0].valueOf(), dataArray[dataArray.length - 1].add(1, 'day').valueOf());\n    // };\n    // cb();\n  }; // 格式化日期显示\n\n\n  const formatDay = date => {\n    if (dayjs().isSame(date, 'day')) {\n      return /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          color: '#3388FF'\n        },\n        children: \"\\u4ECA\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 20\n      }, this);\n    } // 'YYYY-MM-DD HH:mm:ss'\n\n\n    return dayjs(date).format('D');\n  };\n\n  const head = ['日', '一', '二', '三', '四', '五', '六']; // const calendarBodyHeight = (isMonthView ? 252 : 38) + 8;\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"react-mob-calendar\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"calendar-operate\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: formatMonthYear(state.currentDate)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"calendar-head\",\n      children: head.map(i => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"head-cell\",\n        children: i\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(animated.div, {\n      className: cn('calendar-body', {\n        'week-mode': isMonthView\n      }),\n      style: heightStyle,\n      ref: calendarRef,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          transform: `translate3d(${-state.translateIndex * 100}%, 0, 0)`\n        },\n        children: springStyles.map((style, i) => {\n          var _dateList$i;\n\n          const dateList = isMonthView || state.isTouching ? state.monthDates : state.weekDates;\n          return /*#__PURE__*/_jsxDEV(animated.div, {\n            className: \"month-cell\",\n            style: style,\n            children: (_dateList$i = dateList[i]) === null || _dateList$i === void 0 ? void 0 : _dateList$i.map((date, index) => {\n              // 选中日期\n              const isCurrentDay = date.isSame(state.currentDate, 'day'); // 其它月的日期, 在星期的模式下不显示置灰\n\n              const isOtherMonthDay = state.showType === 'week' ? false : !date.isSame(state.currentMonthFirstDay, 'month'); // 是否为标志过的日期\n\n              const isMarkDate = props.markDates.find(d => date.isSame(d, 'day'));\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: cn('day-cell', {\n                  'is-other-month-day': isOtherMonthDay,\n                  'current-day': isCurrentDay\n                }),\n                onClick: () => handleDayClick(date),\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"day-text\",\n                  children: formatDay(date)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 383,\n                  columnNumber: 45\n                }, this), isMarkDate && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"dot-mark\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 387,\n                  columnNumber: 49\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 373,\n                columnNumber: 41\n              }, this);\n            })\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 350,\n            columnNumber: 29\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bottom-operate\",\n        children: !props.disabledMonthView && /*#__PURE__*/_jsxDEV(\"div\", {\n          role: \"presentation\",\n          onClick: handleShowTypeToggle,\n          className: \"bottom-operate-btn\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 398,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 396,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 335,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 319,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Calendar, \"X8ROH12KWycDEDPq+f8d2wfd7HQ=\", false, function () {\n  return [useSetState, useSprings, useSpring, useDrag];\n});\n\n_c = Calendar;\nexport default Calendar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Calendar\");","map":{"version":3,"sources":["/Users/alian/Desktop/git-source/react-mob-calendar/src/components/calendar/Calendar.tsx"],"names":["React","useEffect","useRef","dayjs","cn","animated","useSpring","useSprings","useDrag","formatMonthDate","formatWeekDate","formatMonthYear","mergeProps","useSetState","defaultFunc","defaultCalendarProps","currentDate","Date","showType","transitionDuration","onDateClick","onTouchStart","onTouchMove","onTouchEnd","onToggleShowType","markDates","Calendar","p","props","state","setState","currentMonthFirstDay","startOf","monthDates","currentWeekFirstDay","weekDates","touch","x","y","translateIndex","calendarY","isTouching","isTouchingRef","calendarRef","isMonthView","dayjsDate","handleDayClick","isSame","toDate","springStyles","springApi","i","from","transform","config","tension","friction","clamp","duration","heightStyle","heightApi","height","start","runHorizontal","dragState","movement","last","current","Math","abs","add","to","next","nextMonthFirstDay","nextWeekFirstDay","width","offsetWidth","xPersent","immediate","runVertical","handleShowTypeToggle","max","min","event","stopPropagation","first","axis","pointer","target","eventOptions","passive","handleMonthToggle","type","isPrev","formatFun","operateDate","updateStateData","formatDay","date","color","format","head","map","style","dateList","index","isCurrentDay","isOtherMonthDay","isMarkDate","find","d","disabledMonthView"],"mappings":"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","sourcesContent":["/* eslint-disable react/destructuring-assignment */\n/**\n * 日视图/列表视图 日历\n */\nimport React, { FC, TouchEvent, useEffect, useRef } from 'react';\nimport dayjs, { Dayjs } from 'dayjs';\nimport throttle from 'lodash/throttle';\nimport cn from 'classnames';\nimport { animated, useSpring, useSprings } from '@react-spring/web';\nimport { useDrag, FullGestureState } from '@use-gesture/react';\n\nimport {\n    formatMonthDate,\n    formatWeekDate,\n    formatMonthYear,\n    mergeProps,\n} from '../../utils/index';\n\nimport { useSetState } from '../../utils/hooks';\n\nexport type CalendarProps = {\n    // 选中日期\n    currentDate?: Date;\n    // 展示方式\n    showType?: 'week' | 'month';\n    // 动画时间\n    transitionDuration?: number;\n    // 点击选中日期\n    onDateClick?: Function;\n    // 拖动开始\n    onTouchStart?: Function;\n    // 拖动过程\n    onTouchMove?: Function;\n    // 拖动结束\n    onTouchEnd?: (start: number, end: number) => void;\n    // 更换视图模式\n    onToggleShowType?: Function;\n    // 标记日期\n    markDates?: Date[];\n    // 禁用月视图\n    disabledMonthView?: boolean;\n};\n\nconst defaultFunc = (...rest: any) => {\n    // console.log('default function:', rest);\n};\n\nconst defaultCalendarProps = {\n    currentDate: new Date(),\n    showType: 'week',\n    transitionDuration: 0.3,\n    onDateClick: defaultFunc,\n    onTouchStart: defaultFunc,\n    onTouchMove: defaultFunc,\n    onTouchEnd: defaultFunc,\n    onToggleShowType: defaultFunc,\n    markDates: [],\n};\n\ntype DragType = Omit<FullGestureState<'drag'>, 'event'> & {\n    event: PointerEvent | MouseEvent | globalThis.TouchEvent | KeyboardEvent;\n};\n\ntype StateValue = {\n    currentMonthFirstDay: Dayjs;\n    monthDates: Dayjs[][];\n    currentWeekFirstDay: Dayjs;\n    weekDates: Dayjs[][];\n    currentDate: Dayjs;\n    touch: { x: number; y: number };\n    translateIndex: number;\n    calendarY: number;\n    showType: CalendarProps['showType'];\n    isTouching: boolean;\n};\n\nconst Calendar: FC<CalendarProps> = p => {\n    const props = mergeProps(defaultCalendarProps, p);\n\n    const [state, setState] = useSetState<StateValue>({\n        currentMonthFirstDay: dayjs().startOf('month'),\n        monthDates: [], // 月日历需要展示的日期 包括前一月 当月 下一月\n        currentWeekFirstDay: dayjs().startOf('week'),\n        weekDates: [], // 周日历需要展示的日期  包括前一周 当周 下一周\n        currentDate: dayjs(),\n        touch: { x: 0, y: 0 },\n        translateIndex: 0,\n        calendarY: 0, // 于Y轴的位置\n        showType: props.showType,\n        isTouching: false\n    });\n\n    // 是否拖动中\n    const isTouchingRef = useRef(false);\n    // 日历dom\n    const calendarRef = useRef<HTMLDivElement>(null);\n\n    // 收起为周视图, 展开为月视图\n    const isMonthView = state.showType === 'month';\n\n    // 更新日期. 模拟 getDerivedStateFromProps\n    useEffect(() => {\n        const dayjsDate = dayjs(props.currentDate);\n        setState({\n            ...formatMonthDate(dayjsDate),\n            ...formatWeekDate(dayjsDate),\n            currentDate: dayjsDate,\n        });\n    }, [props.currentDate, setState]);\n\n    // 点击选中日期\n    const handleDayClick = (dayjsDate: Dayjs) => {\n        if (dayjs(state.currentDate).isSame(dayjsDate, 'day')) {\n            return;\n        }\n        setState({\n            ...formatMonthDate(dayjsDate),\n            ...formatWeekDate(dayjsDate),\n            currentDate: dayjsDate,\n        });\n        props.onDateClick(dayjsDate.toDate());\n    };\n\n    const [springStyles, springApi] = useSprings(3, i => ({\n        from: {\n            transform: `translate3d(${(i - 1 + state.translateIndex) * 100}%, ${\n                state.calendarY\n            }px, 0)`,\n            transitionDuration: `${props.transitionDuration}s`,\n        },\n        config: {\n            tension: 100,\n            friction: 30,\n            clamp: true,\n            duration: 0,\n        },\n    }));\n\n    const [heightStyle, heightApi] = useSpring(() => ({\n        from: {\n            height: 46,\n            transitionDuration: '0.3s'\n        }\n    }));\n\n    useEffect(() => {\n        heightApi.start({\n            from: {\n                height: state.showType === 'week' ? 46 : 260,\n            }\n        })\n    }, [state.showType, heightApi])\n\n    const runHorizontal = (dragState: DragType) => {\n        const [x] = dragState.movement;\n        if (dragState.last) {\n            isTouchingRef.current = false;\n            if (Math.abs(x) > 80) {\n                const add = x > 0 ? 1 : -1;\n                springApi.start(i => ({\n                    to: async next => {\n                        await next({\n                            transform: `translate3d(${\n                                (i - 1 + state.translateIndex + add) * 100\n                            }%, ${state.calendarY}px, 0)`,\n                            transitionDuration: `${props.transitionDuration}s`,\n                        });\n                    },\n                }));\n                setState({\n                    translateIndex: state.translateIndex + add,\n                });\n                if (isMonthView) {\n                    const nextMonthFirstDay = state.currentMonthFirstDay[\n                        add > 0 ? 'subtract' : 'add'\n                    ](1, 'month');\n                    handleDayClick(nextMonthFirstDay);\n                } else {\n                    const nextWeekFirstDay = state.currentWeekFirstDay[\n                        add > 0 ? 'subtract' : 'add'\n                    ](1, 'week');\n                    handleDayClick(nextWeekFirstDay);\n                }\n            } else {\n                springApi.start(i => ({\n                    to: async next => {\n                        await next({\n                            transform: `translate3d(${\n                                (i - 1 + state.translateIndex) * 100\n                            }%, ${state.calendarY}px, 0)`,\n                            transitionDuration: `${props.transitionDuration}s`,\n                        });\n                    },\n                }));\n            }\n            return;\n        }\n        const width = calendarRef.current?.offsetWidth || 1;\n        const xPersent = x / width;\n        springApi.start(i => ({\n            transform: `translate3d(${\n                (i - 1 + state.translateIndex + xPersent) * 100\n            }%, ${state.calendarY}px, 0)`,\n            transitionDuration: `0s`,\n            immediate: true,\n        }));\n    };\n\n    const runVertical = (dragState: DragType) => {\n        const [, y] = dragState.movement;\n        const height = isMonthView ? 260 : 46;\n        if(dragState.last) {\n            if(Math.abs(y) > 80) {\n                handleShowTypeToggle();\n                if(y > 0) {\n                    heightApi.start({\n                        to: async next => {\n                            await next({\n                                height: height,\n                                transitionDuration: '0.3s'\n                            });\n                        }\n                    })\n                }\n            }else {\n                heightApi.start({\n                    from: {\n                        height: height,\n                        transitionDuration: '0.3s'\n                    }\n                })\n            }\n            return;\n        }\n        if(isMonthView) {\n            heightApi.start({\n                from: {\n                    height: Math.max(height + y, 60),\n                    transitionDuration: '0s'\n                }\n            })\n        } else {\n            heightApi.start({\n                from: {\n                    height: Math.min(height + y, 260),\n                    transitionDuration: '0s'\n                }\n            })\n        }\n\n    }\n\n    useDrag(\n        dragState => {\n            dragState.event.stopPropagation();\n            if (dragState.first) {\n                isTouchingRef.current = true;\n            }\n\n            if (dragState.axis === 'x') {\n                runHorizontal(dragState);\n            }\n\n            if(dragState.axis === 'y') {\n                if(!state.isTouching) {\n                    setState({ isTouching: true });\n                }\n                runVertical(dragState);\n            }\n        },\n        {\n            pointer: { touch: true },\n            target: calendarRef,\n            eventOptions: { passive: false },\n        }\n    );\n\n    const handleShowTypeToggle = () => {\n        setState({ showType: state.showType === 'month' ? 'week' : 'month' });\n    };\n\n    // 可以通过此函数 实现 点击按钮 进行月份切换\n    const handleMonthToggle = (type: 'prev' | 'next') => {\n        const { currentMonthFirstDay, currentWeekFirstDay, showType } = state;\n        const isMonthView = showType === 'month';\n        const isPrev = type === 'prev';\n        const formatFun = isMonthView ? formatMonthDate : formatWeekDate;\n        const operateDate = isMonthView\n            ? currentMonthFirstDay\n            : currentWeekFirstDay;\n        const updateStateData = formatFun(\n            operateDate[isPrev ? 'subtract' : 'add'](\n                1,\n                isMonthView ? 'month' : 'week'\n            )\n        );\n        setState(updateStateData);\n        // const cb = () => {\n        //     const dataArray = updateStateData[isMonthView ? 'monthDates' : 'weekDates'][1];\n        //     onTouchEnd(dataArray[0].valueOf(), dataArray[dataArray.length - 1].add(1, 'day').valueOf());\n        // };\n        // cb();\n    };\n\n    // 格式化日期显示\n    const formatDay = (date: Dayjs) => {\n        if (dayjs().isSame(date, 'day')) {\n            return <span style={{ color: '#3388FF' }}>今</span>;\n        }\n        // 'YYYY-MM-DD HH:mm:ss'\n        return dayjs(date).format('D');\n    };\n\n    const head = ['日', '一', '二', '三', '四', '五', '六'];\n\n    // const calendarBodyHeight = (isMonthView ? 252 : 38) + 8;\n\n    return (\n        <div className='react-mob-calendar'>\n            {/* 年月 */}\n            <div className='calendar-operate'>\n                <div>{formatMonthYear(state.currentDate)}</div>\n            </div>\n\n            {/* 星期 */}\n            <div className='calendar-head'>\n                {head.map(i => (\n                    <div className='head-cell' key={i}>\n                        {i}\n                    </div>\n                ))}\n            </div>\n\n            {/* 日期表格 */}\n            <animated.div\n                className={cn('calendar-body', { 'week-mode': isMonthView })}\n                style={heightStyle}\n                ref={calendarRef}>\n                <div\n                    style={{\n                        transform: `translate3d(${\n                            -state.translateIndex * 100\n                        }%, 0, 0)`,\n                    }}>\n                    {springStyles.map((style, i) => {\n                        const dateList = (isMonthView || state.isTouching)\n                            ? state.monthDates\n                            : state.weekDates;\n                        return (\n                            <animated.div\n                                className='month-cell'\n                                key={i}\n                                style={style}>\n                                {dateList[i]?.map((date, index) => {\n                                    // 选中日期\n                                    const isCurrentDay = date.isSame(\n                                        state.currentDate,\n                                        'day'\n                                    );\n                                    // 其它月的日期, 在星期的模式下不显示置灰\n                                    const isOtherMonthDay =\n                                        state.showType === 'week'\n                                            ? false\n                                            : !date.isSame(\n                                                  state.currentMonthFirstDay,\n                                                  'month'\n                                              );\n                                    // 是否为标志过的日期\n                                    const isMarkDate = props.markDates.find(d =>\n                                        date.isSame(d, 'day')\n                                    );\n                                    return (\n                                        <div\n                                            key={index}\n                                            className={cn('day-cell', {\n                                                'is-other-month-day':\n                                                    isOtherMonthDay,\n                                                'current-day': isCurrentDay,\n                                            })}\n                                            onClick={() =>\n                                                handleDayClick(date)\n                                            }>\n                                            <div className='day-text'>\n                                                {formatDay(date)}\n                                            </div>\n                                            {isMarkDate && (\n                                                <div className='dot-mark' />\n                                            )}\n                                        </div>\n                                    );\n                                })}\n                            </animated.div>\n                        );\n                    })}\n                </div>\n                <div className='bottom-operate'>\n                    {!props.disabledMonthView && (\n                        <div\n                            role='presentation'\n                            onClick={handleShowTypeToggle}\n                            className='bottom-operate-btn'\n                        />\n                    )}\n                </div>\n            </animated.div>\n        </div>\n    );\n};\n\nexport default Calendar;\n"]},"metadata":{},"sourceType":"module"}