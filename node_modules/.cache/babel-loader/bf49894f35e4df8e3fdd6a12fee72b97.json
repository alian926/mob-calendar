{"ast":null,"code":"var _jsxFileName = \"/Users/alian/Desktop/git-source/react-mob-calendar/src/components/calendar/Calendar.tsx\",\n    _s = $RefreshSig$();\n\n/* eslint-disable react/destructuring-assignment */\n\n/**\n * 日视图/列表视图 日历\n */\nimport React, { useEffect, useRef, useMemo } from 'react';\nimport dayjs from 'dayjs';\nimport cn from 'classnames';\nimport { animated, useSpring, useSprings } from '@react-spring/web';\nimport { useDrag } from '@use-gesture/react';\nimport { formatMonthDate, formatWeekDate, formatMonthYear, mergeProps } from '../../utils/index';\nimport { useSetState } from '../../utils/hooks';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst defaultFunc = function () {// console.log('default function:', rest);\n};\n\nconst defaultCalendarProps = {\n  currentDate: new Date(),\n  showType: 'week',\n  transitionDuration: 0.3,\n  onDateClick: defaultFunc,\n  onTouchStart: defaultFunc,\n  onTouchMove: defaultFunc,\n  onTouchEnd: defaultFunc,\n  onToggleShowType: defaultFunc,\n  markDates: []\n};\n\nconst Calendar = p => {\n  _s();\n\n  const props = mergeProps(defaultCalendarProps, p);\n  const [state, setState] = useSetState({\n    currentMonthFirstDay: dayjs().startOf('month'),\n    monthDates: [],\n    // 月日历需要展示的日期 包括前一月 当月 下一月\n    currentWeekFirstDay: dayjs().startOf('week'),\n    weekDates: [],\n    // 周日历需要展示的日期  包括前一周 当周 下一周\n    currentDate: dayjs(),\n    touch: {\n      x: 0,\n      y: 0\n    },\n    translateIndex: 0,\n    calendarY: 0,\n    // 于Y轴的位置\n    showType: props.showType,\n    isTouching: false\n  }); // 是否拖动中\n\n  const isTouchingRef = useRef(false); // 日历dom\n\n  const calendarRef = useRef(null); // 收起为周视图, 展开为月视图\n\n  const isMonthView = state.showType === 'month'; // 更新日期. 模拟 getDerivedStateFromProps\n\n  useEffect(() => {\n    const dayjsDate = dayjs(props.currentDate);\n    setState({ ...formatMonthDate(dayjsDate),\n      ...formatWeekDate(dayjsDate),\n      currentDate: dayjsDate\n    });\n  }, [props.currentDate, setState]); // 点击选中日期\n\n  const handleDayClick = dayjsDate => {\n    if (dayjs(state.currentDate).isSame(dayjsDate, 'day')) {\n      return;\n    }\n\n    setState({ ...formatMonthDate(dayjsDate),\n      ...formatWeekDate(dayjsDate),\n      currentDate: dayjsDate\n    });\n    props.onDateClick(dayjsDate.toDate());\n  }; // 父容器位移变化\n\n\n  const [containerStyle, containerApi] = useSpring(() => ({\n    from: {\n      transform: `translate3d(${-state.translateIndex * 100}%, 0, 0)`,\n      transitionDuration: `0s`,\n      transitionProperty: 'none'\n    },\n    config: {\n      tension: 100,\n      friction: 30,\n      clamp: true,\n      duration: 100\n    }\n  })); // 父容器常规显示指定选中内容y轴高度\n\n  const pos = useMemo(() => {\n    var _state$monthDates$;\n\n    const index = (_state$monthDates$ = state.monthDates[1]) === null || _state$monthDates$ === void 0 ? void 0 : _state$monthDates$.findIndex(item => item.isSame(state.currentDate, 'day'));\n    const pos = Math.floor(index / 7) || 0;\n    return -pos * 42;\n  }, [state.currentDate, state.monthDates]); // 父容器位移数字初始化\n\n  useEffect(() => {\n    console.log('%c 2022-01-27, 150-info: first', 'color: fuchsia; background: Aquamarine; font-size: 20px;', state.showType, state.translateIndex, containerApi, props.transitionDuration, pos); // Alian-log\n\n    containerApi.start({\n      to: async next => {\n        await next({\n          transform: `translate3d(${-state.translateIndex * 100}%, ${state.showType === 'week' ? pos : 0}px, 0)`,\n          transitionDuration: `${props.transitionDuration}s`,\n          transitionProperty: 'none',\n          immediate: true\n        });\n      }\n    });\n  }, [state.showType, state.translateIndex, containerApi, props.transitionDuration, pos]);\n  useEffect(() => {\n    if (!state.isTouching) return;\n    containerApi.start({\n      to: async next => {\n        await next({\n          transform: `translate3d(${-state.translateIndex * 100}%, 0px, 0)`,\n          transitionDuration: `0s`,\n          transitionProperty: 'none',\n          immediate: true,\n          config: {\n            duration: 0\n          }\n        });\n      }\n    });\n  }, [state.isTouching, containerApi, state.translateIndex]); // 子容器横向位移\n\n  const [springStyles, springApi] = useSprings(3, i => ({\n    from: {\n      transform: `translate3d(${(i - 1 + state.translateIndex) * 100}%, ${state.calendarY}px, 0)`,\n      transitionDuration: `${props.transitionDuration}s`\n    },\n    config: {\n      tension: 100,\n      friction: 30,\n      clamp: true,\n      duration: 0\n    }\n  })); // 最外层容器高度\n\n  const [heightStyle, heightApi] = useSpring(() => ({\n    from: {\n      height: 46,\n      transitionDuration: `${props.transitionDuration}s`\n    },\n    config: {\n      tension: 100,\n      friction: 30,\n      clamp: true,\n      duration: 200\n    }\n  }));\n  useEffect(() => {\n    heightApi.start({\n      from: {\n        height: state.showType === 'week' ? 46 : 260\n      }\n    });\n  }, [state.showType, heightApi]); // 横向移动计算\n\n  const runHorizontal = dragState => {\n    var _calendarRef$current;\n\n    const [x] = dragState.movement;\n\n    if (dragState.last) {\n      isTouchingRef.current = false;\n\n      if (Math.abs(x) > 80) {\n        const add = x > 0 ? 1 : -1;\n        springApi.start(i => ({\n          to: async next => {\n            await next({\n              transform: `translate3d(${(i - 1 + state.translateIndex + add) * 100}%, ${state.calendarY}px, 0)`,\n              transitionDuration: `${props.transitionDuration}s`\n            });\n          }\n        }));\n        setState({\n          translateIndex: state.translateIndex + add,\n          isTouching: false\n        });\n\n        if (isMonthView) {\n          const nextMonthFirstDay = state.currentMonthFirstDay[add > 0 ? 'subtract' : 'add'](1, 'month');\n          handleDayClick(nextMonthFirstDay);\n        } else {\n          const nextWeekFirstDay = state.currentWeekFirstDay[add > 0 ? 'subtract' : 'add'](1, 'week');\n          handleDayClick(nextWeekFirstDay);\n        }\n      } else {\n        springApi.start(i => ({\n          to: async next => {\n            await next({\n              transform: `translate3d(${(i - 1 + state.translateIndex) * 100}%, ${state.calendarY}px, 0)`,\n              transitionDuration: `${props.transitionDuration}s`\n            });\n          }\n        }));\n      }\n\n      return;\n    }\n\n    console.log('%c 2022-01-27, 268-info: dragState', 'color: fuchsia; background: Aquamarine; font-size: 20px;', dragState); // Alian-log\n\n    const width = ((_calendarRef$current = calendarRef.current) === null || _calendarRef$current === void 0 ? void 0 : _calendarRef$current.offsetWidth) || 1;\n    const xPersent = x / width;\n    springApi.start(i => ({\n      transform: `translate3d(${(i - 1 + state.translateIndex + xPersent) * 100}%, ${state.calendarY}px, 0)`,\n      transitionDuration: `0s`,\n      immediate: true\n    }));\n  }; // 纵向移动计算\n\n\n  const runVertical = dragState => {\n    const [, y] = dragState.movement;\n    const height = isMonthView ? 260 : 46;\n\n    if (dragState.last) {\n      if (Math.abs(y) > 80) {\n        const targetHeight = !isMonthView ? 260 : 46;\n\n        if (y > 0) {\n          heightApi.start({\n            to: async next => {\n              await next({\n                height: targetHeight,\n                transitionDuration: '0.3s',\n                immediate: false,\n                config: {\n                  duration: 0.3\n                }\n              });\n              handleShowTypeToggle();\n            }\n          });\n          containerApi.start({\n            to: async next => {\n              await next({\n                transform: `translate3d(${-state.translateIndex * 100}%, 0px, 0)`,\n                transitionDuration: `${props.transitionDuration}s`,\n                transitionProperty: 'all',\n                immediate: true\n              });\n            }\n          });\n        } else {\n          heightApi.start({\n            to: async next => {\n              await next({\n                height: targetHeight,\n                transitionDuration: '0.3s',\n                immediate: false,\n                config: {\n                  duration: 0.3\n                }\n              });\n              handleShowTypeToggle();\n            }\n          });\n          containerApi.start({\n            to: async next => {\n              await next({\n                transform: `translate3d(${-state.translateIndex * 100}%, ${pos}px, 0)`,\n                transitionDuration: `${props.transitionDuration}s`,\n                transitionProperty: 'all',\n                immediate: true\n              });\n            }\n          });\n        }\n      } else {\n        heightApi.start({\n          to: async next => {\n            await next({\n              height: height,\n              transitionDuration: '0.3s',\n              immediate: false\n            });\n          }\n        });\n        containerApi.start({\n          to: async next => {\n            await next({\n              transform: `translate3d(${-state.translateIndex * 100}%, ${isMonthView ? 0 : pos}px, 0)`,\n              transitionDuration: `${props.transitionDuration}s`,\n              immediate: false\n            });\n          }\n        });\n      }\n\n      return;\n    }\n\n    if (isMonthView) {\n      heightApi.start({\n        from: {\n          height: Math.max(height + y, 60),\n          transitionDuration: '0s'\n        }\n      });\n      containerApi.start({\n        to: async next => {\n          await next({\n            transform: `translate3d(${-state.translateIndex * 100}%, ${Math.max(pos, y * 0.8)}px, 0)`,\n            transitionDuration: `${props.transitionDuration}s`,\n            transitionProperty: 'none',\n            immediate: true\n          });\n        }\n      });\n    } else {\n      heightApi.start({\n        from: {\n          height: Math.min(height + y, 260),\n          transitionDuration: '0s'\n        }\n      });\n      containerApi.start({\n        to: async next => {\n          await next({\n            transform: `translate3d(${-state.translateIndex * 100}%, ${Math.min(pos + y * 0.8, 0)}px, 0)`,\n            transitionDuration: `${props.transitionDuration}s`,\n            transitionProperty: 'none',\n            immediate: true\n          });\n        }\n      });\n    }\n  }; // 拖动, 周末式切换的时候, 需要用星期来展示列表\n\n\n  useDrag(dragState => {\n    dragState.event.stopPropagation();\n    console.log('%c 2022-01-27, 413-info: dragState.parent', 'color: fuchsia; background: Aquamarine; font-size: 20px;', dragState); // Alian-log\n\n    if (dragState.first) {\n      isTouchingRef.current = true;\n    }\n\n    if (dragState.axis === 'x') {\n      if (!isMonthView && !state.isTouching) {\n        setState({\n          isTouching: true\n        });\n      }\n\n      runHorizontal(dragState);\n    }\n\n    if (dragState.axis === 'y') {\n      runVertical(dragState);\n    }\n  }, {\n    pointer: {\n      touch: true\n    },\n    target: calendarRef,\n    eventOptions: {\n      passive: false\n    }\n  }); // 切换模式\n\n  const handleShowTypeToggle = () => {\n    containerApi.start({\n      to: async next => {\n        await next({\n          transform: `translate3d(${-state.translateIndex * 100}%, ${state.showType === 'month' ? pos : 0}px, 0)`,\n          transitionDuration: `${props.transitionDuration}s`,\n          transitionProperty: 'all',\n          config: {\n            duration: 300\n          }\n        });\n        setState({\n          showType: state.showType === 'month' ? 'week' : 'month'\n        });\n      }\n    });\n  }; // 可以通过此函数 实现 点击按钮 进行月份切换\n\n\n  const handleMonthToggle = type => {\n    const {\n      currentMonthFirstDay,\n      currentWeekFirstDay,\n      showType\n    } = state;\n    const isMonthView = showType === 'month';\n    const isPrev = type === 'prev';\n    const formatFun = isMonthView ? formatMonthDate : formatWeekDate;\n    const operateDate = isMonthView ? currentMonthFirstDay : currentWeekFirstDay;\n    const updateStateData = formatFun(operateDate[isPrev ? 'subtract' : 'add'](1, isMonthView ? 'month' : 'week'));\n    setState(updateStateData); // const cb = () => {\n    //     const dataArray = updateStateData[isMonthView ? 'monthDates' : 'weekDates'][1];\n    //     onTouchEnd(dataArray[0].valueOf(), dataArray[dataArray.length - 1].add(1, 'day').valueOf());\n    // };\n    // cb();\n  }; // 格式化日期显示\n\n\n  const formatDay = date => {\n    if (dayjs().isSame(date, 'day')) {\n      return /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          color: '#3388FF'\n        },\n        children: \"\\u4ECA\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 487,\n        columnNumber: 20\n      }, this);\n    } // 'YYYY-MM-DD HH:mm:ss'\n\n\n    return dayjs(date).format('D');\n  };\n\n  const head = ['日', '一', '二', '三', '四', '五', '六']; // const calendarBodyHeight = (isMonthView ? 252 : 38) + 8;\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"react-mob-calendar\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"calendar-operate\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: formatMonthYear(state.currentDate)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 501,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 500,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"calendar-head\",\n      children: head.map(i => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"head-cell\",\n        children: i\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 507,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 505,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(animated.div, {\n      className: cn('calendar-body', {\n        'week-mode': isMonthView\n      }),\n      style: heightStyle,\n      ref: calendarRef,\n      children: [/*#__PURE__*/_jsxDEV(animated.div, {\n        style: containerStyle,\n        children: [springStyles.map((style, i) => {\n          var _state$monthDates$i;\n\n          return /*#__PURE__*/_jsxDEV(animated.div, {\n            className: \"month-cell\",\n            style: { ...style,\n              opacity: !isMonthView && state.isTouching ? 0 : 1\n            },\n            children: (_state$monthDates$i = state.monthDates[i]) === null || _state$monthDates$i === void 0 ? void 0 : _state$monthDates$i.map((date, index) => {\n              // 选中日期\n              const isCurrentDay = date.isSame(state.currentDate, 'day'); // 其它月的日期, 在星期的模式下不显示置灰\n\n              const isOtherMonthDay = state.showType === 'week' ? false : !date.isSame(state.currentMonthFirstDay, 'month'); // 是否为标志过的日期\n\n              const isMarkDate = props.markDates.find(d => date.isSame(d, 'day'));\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: cn('day-cell', {\n                  'is-other-month-day': isOtherMonthDay,\n                  'current-day': isCurrentDay\n                }),\n                onClick: () => handleDayClick(date),\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"day-text\",\n                  children: formatDay(date)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 561,\n                  columnNumber: 45\n                }, this), isMarkDate && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"dot-mark\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 565,\n                  columnNumber: 49\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 551,\n                columnNumber: 41\n              }, this);\n            })\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 522,\n            columnNumber: 29\n          }, this);\n        }), springStyles.map((style, i) => {\n          var _state$weekDates$i;\n\n          return /*#__PURE__*/_jsxDEV(animated.div, {\n            className: \"month-cell\",\n            style: { ...style,\n              opacity: !isMonthView && state.isTouching ? 1 : 0\n            },\n            children: (_state$weekDates$i = state.weekDates[i]) === null || _state$weekDates$i === void 0 ? void 0 : _state$weekDates$i.map((date, index) => {\n              // 选中日期\n              const isCurrentDay = date.isSame(state.currentDate, 'day'); // 其它月的日期, 在星期的模式下不显示置灰\n\n              const isOtherMonthDay = state.showType === 'week' ? false : !date.isSame(state.currentMonthFirstDay, 'month'); // 是否为标志过的日期\n\n              const isMarkDate = props.markDates.find(d => date.isSame(d, 'day'));\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: cn('day-cell', {\n                  'is-other-month-day': isOtherMonthDay,\n                  'current-day': isCurrentDay\n                }),\n                onClick: () => handleDayClick(date),\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"day-text\",\n                  children: formatDay(date)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 615,\n                  columnNumber: 45\n                }, this), isMarkDate && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"dot-mark\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 619,\n                  columnNumber: 49\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 605,\n                columnNumber: 41\n              }, this);\n            })\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 576,\n            columnNumber: 29\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 518,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bottom-operate\",\n        children: !props.disabledMonthView && /*#__PURE__*/_jsxDEV(\"div\", {\n          role: \"presentation\",\n          onClick: handleShowTypeToggle,\n          className: \"bottom-operate-btn\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 630,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 628,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 514,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 498,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Calendar, \"f8vvp5DRvBIt8YAGbKiUI8kyNw8=\", false, function () {\n  return [useSetState, useSpring, useSprings, useSpring, useDrag];\n});\n\n_c = Calendar;\nexport default Calendar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Calendar\");","map":{"version":3,"sources":["/Users/alian/Desktop/git-source/react-mob-calendar/src/components/calendar/Calendar.tsx"],"names":["React","useEffect","useRef","useMemo","dayjs","cn","animated","useSpring","useSprings","useDrag","formatMonthDate","formatWeekDate","formatMonthYear","mergeProps","useSetState","defaultFunc","defaultCalendarProps","currentDate","Date","showType","transitionDuration","onDateClick","onTouchStart","onTouchMove","onTouchEnd","onToggleShowType","markDates","Calendar","p","props","state","setState","currentMonthFirstDay","startOf","monthDates","currentWeekFirstDay","weekDates","touch","x","y","translateIndex","calendarY","isTouching","isTouchingRef","calendarRef","isMonthView","dayjsDate","handleDayClick","isSame","toDate","containerStyle","containerApi","from","transform","transitionProperty","config","tension","friction","clamp","duration","pos","index","findIndex","item","Math","floor","console","log","start","to","next","immediate","springStyles","springApi","i","heightStyle","heightApi","height","runHorizontal","dragState","movement","last","current","abs","add","nextMonthFirstDay","nextWeekFirstDay","width","offsetWidth","xPersent","runVertical","targetHeight","handleShowTypeToggle","max","min","event","stopPropagation","first","axis","pointer","target","eventOptions","passive","handleMonthToggle","type","isPrev","formatFun","operateDate","updateStateData","formatDay","date","color","format","head","map","style","opacity","isCurrentDay","isOtherMonthDay","isMarkDate","find","d","disabledMonthView"],"mappings":"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","sourcesContent":["/* eslint-disable react/destructuring-assignment */\n/**\n * 日视图/列表视图 日历\n */\nimport React, { FC, TouchEvent, useEffect, useRef, useMemo } from 'react';\nimport dayjs, { Dayjs } from 'dayjs';\nimport throttle from 'lodash/throttle';\nimport cn from 'classnames';\nimport { animated, useSpring, useSprings } from '@react-spring/web';\nimport { useDrag, FullGestureState } from '@use-gesture/react';\n\nimport {\n    formatMonthDate,\n    formatWeekDate,\n    formatMonthYear,\n    mergeProps,\n} from '../../utils/index';\n\nimport { useSetState } from '../../utils/hooks';\n\nexport type CalendarProps = {\n    // 选中日期\n    currentDate?: Date;\n    // 展示方式\n    showType?: 'week' | 'month';\n    // 动画时间\n    transitionDuration?: number;\n    // 点击选中日期\n    onDateClick?: Function;\n    // 拖动开始\n    onTouchStart?: Function;\n    // 拖动过程\n    onTouchMove?: Function;\n    // 拖动结束\n    onTouchEnd?: (start: number, end: number) => void;\n    // 更换视图模式\n    onToggleShowType?: Function;\n    // 标记日期\n    markDates?: Date[];\n    // 禁用月视图\n    disabledMonthView?: boolean;\n};\n\nconst defaultFunc = (...rest: any) => {\n    // console.log('default function:', rest);\n};\n\nconst defaultCalendarProps = {\n    currentDate: new Date(),\n    showType: 'week',\n    transitionDuration: 0.3,\n    onDateClick: defaultFunc,\n    onTouchStart: defaultFunc,\n    onTouchMove: defaultFunc,\n    onTouchEnd: defaultFunc,\n    onToggleShowType: defaultFunc,\n    markDates: [],\n};\n\ntype DragType = Omit<FullGestureState<'drag'>, 'event'> & {\n    event: PointerEvent | MouseEvent | globalThis.TouchEvent | KeyboardEvent;\n};\n\ntype StateValue = {\n    currentMonthFirstDay: Dayjs;\n    monthDates: Dayjs[][];\n    currentWeekFirstDay: Dayjs;\n    weekDates: Dayjs[][];\n    currentDate: Dayjs;\n    touch: { x: number; y: number };\n    translateIndex: number;\n    calendarY: number;\n    showType: CalendarProps['showType'];\n    isTouching: boolean;\n};\n\nconst Calendar: FC<CalendarProps> = p => {\n    const props = mergeProps(defaultCalendarProps, p);\n\n    const [state, setState] = useSetState<StateValue>({\n        currentMonthFirstDay: dayjs().startOf('month'),\n        monthDates: [], // 月日历需要展示的日期 包括前一月 当月 下一月\n        currentWeekFirstDay: dayjs().startOf('week'),\n        weekDates: [], // 周日历需要展示的日期  包括前一周 当周 下一周\n        currentDate: dayjs(),\n        touch: { x: 0, y: 0 },\n        translateIndex: 0,\n        calendarY: 0, // 于Y轴的位置\n        showType: props.showType,\n        isTouching: false,\n    });\n\n    // 是否拖动中\n    const isTouchingRef = useRef(false);\n    // 日历dom\n    const calendarRef = useRef<HTMLDivElement>(null);\n\n    // 收起为周视图, 展开为月视图\n    const isMonthView = state.showType === 'month';\n\n    // 更新日期. 模拟 getDerivedStateFromProps\n    useEffect(() => {\n        const dayjsDate = dayjs(props.currentDate);\n        setState({\n            ...formatMonthDate(dayjsDate),\n            ...formatWeekDate(dayjsDate),\n            currentDate: dayjsDate,\n        });\n    }, [props.currentDate, setState]);\n\n    // 点击选中日期\n    const handleDayClick = (dayjsDate: Dayjs) => {\n        if (dayjs(state.currentDate).isSame(dayjsDate, 'day')) {\n            return;\n        }\n        setState({\n            ...formatMonthDate(dayjsDate),\n            ...formatWeekDate(dayjsDate),\n            currentDate: dayjsDate,\n        });\n        props.onDateClick(dayjsDate.toDate());\n    };\n\n    // 父容器位移变化\n    const [containerStyle, containerApi] = useSpring(() => ({\n        from: {\n            transform: `translate3d(${-state.translateIndex * 100}%, 0, 0)`,\n            transitionDuration: `0s`,\n            transitionProperty: 'none',\n        },\n        config: {\n            tension: 100,\n            friction: 30,\n            clamp: true,\n            duration: 100,\n        },\n    }));\n\n    // 父容器常规显示指定选中内容y轴高度\n    const pos = useMemo(() => {\n        const index = state.monthDates[1]?.findIndex(item =>\n            item.isSame(state.currentDate, 'day')\n        );\n        const pos = Math.floor(index / 7) || 0;\n        return -pos * 42;\n    }, [state.currentDate, state.monthDates]);\n\n    // 父容器位移数字初始化\n    useEffect(() => {\n        console.log(\n            '%c 2022-01-27, 150-info: first',\n            'color: fuchsia; background: Aquamarine; font-size: 20px;',\n            state.showType, state.translateIndex, containerApi, props.transitionDuration, pos\n        ); // Alian-log\n        containerApi.start({\n            to: async next => {\n                await next({\n                    transform: `translate3d(${\n                        -state.translateIndex * 100\n                    }%, ${state.showType ==='week' ? pos : 0}px, 0)`,\n                    transitionDuration: `${props.transitionDuration}s`,\n                    transitionProperty: 'none',\n                    immediate: true,\n                });\n            },\n        });\n    }, [state.showType, state.translateIndex, containerApi, props.transitionDuration, pos]);\n\n    useEffect(() => {\n        if (!state.isTouching) return;\n        containerApi.start({\n            to: async next => {\n                await next({\n                    transform: `translate3d(${\n                        -state.translateIndex * 100\n                    }%, 0px, 0)`,\n                    transitionDuration: `0s`,\n                    transitionProperty: 'none',\n                    immediate: true,\n                    config: { duration: 0 },\n                });\n            },\n        });\n    }, [state.isTouching, containerApi, state.translateIndex]);\n\n    // 子容器横向位移\n    const [springStyles, springApi] = useSprings(3, i => ({\n        from: {\n            transform: `translate3d(${(i - 1 + state.translateIndex) * 100}%, ${\n                state.calendarY\n            }px, 0)`,\n            transitionDuration: `${props.transitionDuration}s`,\n        },\n        config: {\n            tension: 100,\n            friction: 30,\n            clamp: true,\n            duration: 0,\n        },\n    }));\n\n    // 最外层容器高度\n    const [heightStyle, heightApi] = useSpring(() => ({\n        from: {\n            height: 46,\n            transitionDuration: `${props.transitionDuration}s`,\n        },\n        config: {\n            tension: 100,\n            friction: 30,\n            clamp: true,\n            duration: 200,\n        },\n    }));\n\n    useEffect(() => {\n        heightApi.start({\n            from: {\n                height: state.showType === 'week' ? 46 : 260,\n            },\n        });\n    }, [state.showType, heightApi]);\n\n    // 横向移动计算\n    const runHorizontal = (dragState: DragType) => {\n        const [x] = dragState.movement;\n        if (dragState.last) {\n            isTouchingRef.current = false;\n            if (Math.abs(x) > 80) {\n                const add = x > 0 ? 1 : -1;\n                springApi.start(i => ({\n                    to: async next => {\n                        await next({\n                            transform: `translate3d(${\n                                (i - 1 + state.translateIndex + add) * 100\n                            }%, ${state.calendarY}px, 0)`,\n                            transitionDuration: `${props.transitionDuration}s`,\n                        });\n                    },\n                }));\n                setState({\n                    translateIndex: state.translateIndex + add,\n                    isTouching: false,\n                });\n                if (isMonthView) {\n                    const nextMonthFirstDay = state.currentMonthFirstDay[\n                        add > 0 ? 'subtract' : 'add'\n                    ](1, 'month');\n                    handleDayClick(nextMonthFirstDay);\n                } else {\n                    const nextWeekFirstDay = state.currentWeekFirstDay[\n                        add > 0 ? 'subtract' : 'add'\n                    ](1, 'week');\n                    handleDayClick(nextWeekFirstDay);\n                }\n            } else {\n                springApi.start(i => ({\n                    to: async next => {\n                        await next({\n                            transform: `translate3d(${\n                                (i - 1 + state.translateIndex) * 100\n                            }%, ${state.calendarY}px, 0)`,\n                            transitionDuration: `${props.transitionDuration}s`,\n                        });\n                    },\n                }));\n            }\n            return;\n        }\n        console.log(\n            '%c 2022-01-27, 268-info: dragState',\n            'color: fuchsia; background: Aquamarine; font-size: 20px;',\n            dragState\n        ); // Alian-log\n        const width = calendarRef.current?.offsetWidth || 1;\n        const xPersent = x / width;\n        springApi.start(i => ({\n            transform: `translate3d(${\n                (i - 1 + state.translateIndex + xPersent) * 100\n            }%, ${state.calendarY}px, 0)`,\n            transitionDuration: `0s`,\n            immediate: true,\n        }));\n    };\n\n    // 纵向移动计算\n    const runVertical = (dragState: DragType) => {\n        const [, y] = dragState.movement;\n        const height = isMonthView ? 260 : 46;\n        if (dragState.last) {\n            if (Math.abs(y) > 80) {\n                const targetHeight = !isMonthView ? 260 : 46;\n                if (y > 0) {\n                    heightApi.start({\n                        to: async next => {\n                            await next({\n                                height: targetHeight,\n                                transitionDuration: '0.3s',\n                                immediate: false,\n                                config: {\n                                    duration: 0.3,\n                                },\n                            });\n                            handleShowTypeToggle();\n                        },\n                    });\n                    containerApi.start({\n                        to: async next => {\n                            await next({\n                                transform: `translate3d(${\n                                    -state.translateIndex * 100\n                                }%, 0px, 0)`,\n                                transitionDuration: `${props.transitionDuration}s`,\n                                transitionProperty: 'all',\n                                immediate: true,\n                            });\n                        },\n                    });\n                } else {\n                    heightApi.start({\n                        to: async next => {\n                            await next({\n                                height: targetHeight,\n                                transitionDuration: '0.3s',\n                                immediate: false,\n                                config: {\n                                    duration: 0.3,\n                                },\n                            });\n                            handleShowTypeToggle();\n                        },\n                    });\n                    containerApi.start({\n                        to: async next => {\n                            await next({\n                                transform: `translate3d(${\n                                    -state.translateIndex * 100\n                                }%, ${pos}px, 0)`,\n                                transitionDuration: `${props.transitionDuration}s`,\n                                transitionProperty: 'all',\n                                immediate: true,\n                            });\n                        },\n                    });\n                }\n            } else {\n                heightApi.start({\n                    to: async next => {\n                        await next({\n                            height: height,\n                            transitionDuration: '0.3s',\n                            immediate: false,\n                        });\n                    },\n                });\n                containerApi.start({\n                    to: async next => {\n                        await next({\n                            transform: `translate3d(${\n                                -state.translateIndex * 100\n                            }%, ${isMonthView ? 0 : pos}px, 0)`,\n                            transitionDuration: `${props.transitionDuration}s`,\n                            immediate: false,\n                        });\n                    },\n                });\n            }\n            return;\n        }\n        if (isMonthView) {\n            heightApi.start({\n                from: {\n                    height: Math.max(height + y, 60),\n                    transitionDuration: '0s',\n                },\n            });\n            containerApi.start({\n                to: async next => {\n                    await next({\n                        transform: `translate3d(${\n                            -state.translateIndex * 100\n                        }%, ${Math.max(pos, y * 0.8)}px, 0)`,\n                        transitionDuration: `${props.transitionDuration}s`,\n                        transitionProperty: 'none',\n                        immediate: true,\n                    });\n                },\n            });\n        } else {\n            heightApi.start({\n                from: {\n                    height: Math.min(height + y, 260),\n                    transitionDuration: '0s',\n                },\n            });\n            containerApi.start({\n                to: async next => {\n                    await next({\n                        transform: `translate3d(${\n                            -state.translateIndex * 100\n                        }%, ${Math.min(pos + y * 0.8, 0)}px, 0)`,\n                        transitionDuration: `${props.transitionDuration}s`,\n                        transitionProperty: 'none',\n                        immediate: true,\n                    });\n                },\n            });\n        }\n    };\n\n    // 拖动, 周末式切换的时候, 需要用星期来展示列表\n    useDrag(\n        dragState => {\n            dragState.event.stopPropagation();\n            console.log(\n                '%c 2022-01-27, 413-info: dragState.parent',\n                'color: fuchsia; background: Aquamarine; font-size: 20px;',\n                dragState\n            ); // Alian-log\n            if (dragState.first) {\n                isTouchingRef.current = true;\n            }\n\n            if (dragState.axis === 'x') {\n                if (!isMonthView && !state.isTouching) {\n                    setState({ isTouching: true });\n                }\n                runHorizontal(dragState);\n            }\n\n            if (dragState.axis === 'y') {\n                runVertical(dragState);\n            }\n        },\n        {\n            pointer: { touch: true },\n            target: calendarRef,\n            eventOptions: { passive: false },\n        }\n    );\n\n    // 切换模式\n    const handleShowTypeToggle = () => {\n        containerApi.start({\n            to: async next => {\n                await next({\n                    transform: `translate3d(${\n                        -state.translateIndex * 100\n                    }%, ${state.showType ==='month' ? pos : 0}px, 0)`,\n                    transitionDuration: `${props.transitionDuration}s`,\n                    transitionProperty: 'all',\n                    config: {\n                        duration: 300\n                    },\n                });\n                setState({ showType: state.showType === 'month' ? 'week' : 'month' });\n            },\n        });\n    };\n\n    // 可以通过此函数 实现 点击按钮 进行月份切换\n    const handleMonthToggle = (type: 'prev' | 'next') => {\n        const { currentMonthFirstDay, currentWeekFirstDay, showType } = state;\n        const isMonthView = showType === 'month';\n        const isPrev = type === 'prev';\n        const formatFun = isMonthView ? formatMonthDate : formatWeekDate;\n        const operateDate = isMonthView\n            ? currentMonthFirstDay\n            : currentWeekFirstDay;\n        const updateStateData = formatFun(\n            operateDate[isPrev ? 'subtract' : 'add'](\n                1,\n                isMonthView ? 'month' : 'week'\n            )\n        );\n        setState(updateStateData);\n        // const cb = () => {\n        //     const dataArray = updateStateData[isMonthView ? 'monthDates' : 'weekDates'][1];\n        //     onTouchEnd(dataArray[0].valueOf(), dataArray[dataArray.length - 1].add(1, 'day').valueOf());\n        // };\n        // cb();\n    };\n\n    // 格式化日期显示\n    const formatDay = (date: Dayjs) => {\n        if (dayjs().isSame(date, 'day')) {\n            return <span style={{ color: '#3388FF' }}>今</span>;\n        }\n        // 'YYYY-MM-DD HH:mm:ss'\n        return dayjs(date).format('D');\n    };\n\n    const head = ['日', '一', '二', '三', '四', '五', '六'];\n\n    // const calendarBodyHeight = (isMonthView ? 252 : 38) + 8;\n\n    return (\n        <div className='react-mob-calendar'>\n            {/* 年月 */}\n            <div className='calendar-operate'>\n                <div>{formatMonthYear(state.currentDate)}</div>\n            </div>\n\n            {/* 星期 */}\n            <div className='calendar-head'>\n                {head.map(i => (\n                    <div className='head-cell' key={i}>\n                        {i}\n                    </div>\n                ))}\n            </div>\n\n            {/* 日期表格 */}\n            <animated.div\n                className={cn('calendar-body', { 'week-mode': isMonthView })}\n                style={heightStyle}\n                ref={calendarRef}>\n                <animated.div style={containerStyle}>\n                    {/* 月视图 */}\n                    {springStyles.map((style, i) => {\n                        return (\n                            <animated.div\n                                className='month-cell'\n                                key={i}\n                                style={{\n                                    ...style,\n                                    opacity:\n                                        !isMonthView && state.isTouching\n                                            ? 0\n                                            : 1,\n                                }}>\n                                {state.monthDates[i]?.map((date, index) => {\n                                    // 选中日期\n                                    const isCurrentDay = date.isSame(\n                                        state.currentDate,\n                                        'day'\n                                    );\n                                    // 其它月的日期, 在星期的模式下不显示置灰\n                                    const isOtherMonthDay =\n                                        state.showType === 'week'\n                                            ? false\n                                            : !date.isSame(\n                                                  state.currentMonthFirstDay,\n                                                  'month'\n                                              );\n                                    // 是否为标志过的日期\n                                    const isMarkDate = props.markDates.find(d =>\n                                        date.isSame(d, 'day')\n                                    );\n                                    return (\n                                        <div\n                                            key={index}\n                                            className={cn('day-cell', {\n                                                'is-other-month-day':\n                                                    isOtherMonthDay,\n                                                'current-day': isCurrentDay,\n                                            })}\n                                            onClick={() =>\n                                                handleDayClick(date)\n                                            }>\n                                            <div className='day-text'>\n                                                {formatDay(date)}\n                                            </div>\n                                            {isMarkDate && (\n                                                <div className='dot-mark' />\n                                            )}\n                                        </div>\n                                    );\n                                })}\n                            </animated.div>\n                        );\n                    })}\n                    {/* 周视图 */}\n                    {springStyles.map((style, i) => {\n                        return (\n                            <animated.div\n                                className='month-cell'\n                                key={i}\n                                style={{\n                                    ...style,\n                                    opacity:\n                                        !isMonthView && state.isTouching\n                                            ? 1\n                                            : 0,\n                                }}>\n                                {state.weekDates[i]?.map((date, index) => {\n                                    // 选中日期\n                                    const isCurrentDay = date.isSame(\n                                        state.currentDate,\n                                        'day'\n                                    );\n                                    // 其它月的日期, 在星期的模式下不显示置灰\n                                    const isOtherMonthDay =\n                                        state.showType === 'week'\n                                            ? false\n                                            : !date.isSame(\n                                                  state.currentMonthFirstDay,\n                                                  'month'\n                                              );\n                                    // 是否为标志过的日期\n                                    const isMarkDate = props.markDates.find(d =>\n                                        date.isSame(d, 'day')\n                                    );\n                                    return (\n                                        <div\n                                            key={index}\n                                            className={cn('day-cell', {\n                                                'is-other-month-day':\n                                                    isOtherMonthDay,\n                                                'current-day': isCurrentDay,\n                                            })}\n                                            onClick={() =>\n                                                handleDayClick(date)\n                                            }>\n                                            <div className='day-text'>\n                                                {formatDay(date)}\n                                            </div>\n                                            {isMarkDate && (\n                                                <div className='dot-mark' />\n                                            )}\n                                        </div>\n                                    );\n                                })}\n                            </animated.div>\n                        );\n                    })}\n                </animated.div>\n                <div className='bottom-operate'>\n                    {!props.disabledMonthView && (\n                        <div\n                            role='presentation'\n                            onClick={handleShowTypeToggle}\n                            className='bottom-operate-btn'\n                        />\n                    )}\n                </div>\n            </animated.div>\n        </div>\n    );\n};\n\nexport default Calendar;\n"]},"metadata":{},"sourceType":"module"}